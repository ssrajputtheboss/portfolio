{"version":3,"sources":["Components/Footer/index.tsx","Components/Header/ShowCard/SkillTag/index.tsx","Components/Header/ShowCard/SkillMenu/index.tsx","Components/Header/ShowCard/DatabaseMenu/index.tsx","Components/Header/ShowCard/LangMenu/index.tsx","Components/Header/ShowCard/index.tsx","Components/Header/index.tsx","Components/Main/ExpandableCard/CardHeading/index.tsx","helpers/readme.ts","helpers/data.ts","Components/ReadMe/GetReadMeWidget/index.tsx","Components/ReadMe/index.tsx","Components/Donut/index.tsx","Components/Main/LiveProjectLink/index.tsx","Components/Main/ExpandableCard/index.tsx","Components/TerminalUI/TerminalTitle/index.tsx","Components/TerminalUI/index.tsx","Components/Main/index.tsx","helpers/commands.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","style","height","width","flexDir","justifyContent","alignItems","w","h","bgColor","href","as","SiGithub","color","SiTwitter","SiLinkedin","SiDocker","SkillTag","name","icon","iconColor","maxW","base","lg","_hover","p","sm","fontSize","SkillMenu","m","borderColor","borderWidth","mr","textColor","fontWeight","FaChevronRight","templateColumns","gap","SiJavascript","SiTypescript","RiFlutterFill","SiAndroidstudio","SiReact","SiNodeDotJs","SiSpring","DatabaseMenu","SiMongodb","DiPostgresql","SiMysql","DiSqllite","LangMenu","SiPython","SiJava","SiCplusplus","SiDart","SiC","ShowCard","props","display","isVisible","borderRadius","transform","mx","aria-label","CgOrganisation","Header","useState","isOpen","setIsOpen","top","position","mt","src","hasArrow","label","colorScheme","onClick","e","FaChevronLeft","CardHeader","title","langs","map","fetchReadMeFromURL","url","a","fetch","then","res","text","_","isString","getReadMeJSON","data","reCode","obj","Map","list","codes","match","isNull","i","length","push","toString","replace","extractCodeAndLinkFromReadMe","lines","split","k","lastHeader","type","info","index","line","includes","parts","j","set","get","content","lang","exec","trim","startsWith","hashes","count","jsonData","GetReadMeWidget","c","rkey","rvalue","orientation","parse","showLineNumbers","language","docco","alt","ReadMe","setText","useEffect","fetchData","remarkPlugins","gfm","children","readmeJson","imgUrls","Array","from","filter","readmeUi","v","imageGrid","id","Donut","series","options","legend","show","labels","className","LiveProjectLink","projectLink","isLive","Flex","rounded","target","FiArrowRight","ExpandableCard","overflowX","boxShadow","header","description","RiArrowUpSLine","RiArrowDownSLine","TerminalTitle","onClose","borderTopRadius","ml","BsTerminal","AiOutlineInfoCircle","fontStyle","pl","AiFillCloseCircle","TerminalUI","getCommand","lastText","setLastText","isTerminalOpen","setIsTerminalOpen","bottom","minH","overflowY","px","substring","border","onKeyDown","keyCode","command","input","toLowerCase","output","value","execCommand","currentTarget","preventDefault","parentElement","scrollTop","scrollHeight","_focus","outline","right","Main","cards","setCards","performOperation","operation","func","subFunc","sType","sort","x","y","word","join","toLocaleLowerCase","pname","textAlign","stack","cmd","callback","cjson","main","args","arg","validateCommand","commandLine","words","slice","commandStringToJSON","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAUaA,EAAS,WAelB,OAAO,wBAAQC,MAAO,CAAEC,OAAO,cAAeC,MAAM,SAA7C,SACH,eAAC,IAAD,CACAC,QAAQ,MACRC,eAAe,eACfC,WAAW,SACXC,EAAE,OACFC,EAAE,KACFC,QAAQ,QANR,UAQI,mBAAGC,KAAK,qCAAR,SACI,cAAC,IAAD,CAAMC,GAAIC,IAAUC,MAAM,YAE9B,mBAAGH,KAAK,qCAAR,SACI,cAAC,IAAD,CAAMC,GAAIG,IAAWD,MAAM,kBAE/B,mBAAGH,KAAK,wDAAR,SACI,cAAC,IAAD,CAAMC,GAAII,IAAYF,MAAM,eAEhC,mBAAGH,KAAK,2CAAR,SACI,cAAC,IAAD,CAAMC,GAAIK,IAAUH,MAAM,qB,+FCnC3B,SAASI,EAAT,GAA4E,IAAvDC,EAAsD,EAAtDA,KAAOC,EAA+C,EAA/CA,KAAOC,EAAwC,EAAxCA,UAC9C,OAAO,cAAC,IAAD,CACPC,KAAM,CAAEC,KAAM,KAAOC,GAAG,OACxBC,OAAQ,CAAEf,QAAQ,kBAFX,SAIH,eAAC,IAAD,CACAL,QAAQ,SACRE,WAAW,SACXD,eAAe,gBACfoB,EAAE,IAJF,UAKI,cAAC,IAAD,CAAMd,GAAIQ,EAAMX,EAAG,CAAEkB,GAAI,IAAKH,GAAG,MAAOhB,EAAG,CAAEmB,GAAI,IAAKH,GAAG,MAAOV,MAAOO,IACvE,cAAC,IAAD,CAAMO,SAAS,UAAUd,MAAM,YAA/B,SAA6CK,SCI1C,SAASU,IACpB,OAAO,eAAC,IAAD,WACH,cAAC,IAAD,UACI,eAAC,IAAD,CACAtB,WAAW,SACXmB,EAAE,IACFI,EAAE,IACFC,YAAY,SACZC,YAAY,SACZtB,QAAQ,WANR,UAQI,cAAC,IAAD,CAAMuB,GAAG,IAAIC,UAAU,YAAYN,SAAS,KAAKO,WAAW,OAA5D,oBACA,cAAC,IAAD,CAAMvB,GAAIwB,IAAgBtB,MAAM,mBAGxC,cAAC,IAAD,UACQ,eAAC,IAAD,CACAuB,gBAAiB,CAACb,GAAG,iBAAmBD,KAAM,iBAC9Ce,IAAK,EACLZ,EAAG,EAHH,UAII,cAACR,EAAD,CAAUE,KAAOmB,IAAepB,KAAK,aAAaE,UAAU,eAC5D,cAACH,EAAD,CAAUE,KAAOoB,IAAerB,KAAK,aAAaE,UAAU,eAC5D,cAACH,EAAD,CAAUE,KAAOqB,IAAgBtB,KAAK,UAAUE,UAAU,aAC1D,cAACH,EAAD,CAAUE,KAAOsB,IAAkBvB,KAAK,UAAUE,UAAU,cAC5D,cAACH,EAAD,CAAUE,KAAOuB,IAAUxB,KAAK,QAAQE,UAAU,aAClD,cAACH,EAAD,CAAUE,KAAOwB,IAAczB,KAAK,SAASE,UAAU,cACvD,cAACH,EAAD,CAAUE,KAAOH,IAAWE,KAAK,SAASE,UAAU,aACpD,cAACH,EAAD,CAAUE,KAAOyB,IAAW1B,KAAK,cAAcE,UAAU,sB,aC9B9D,SAASyB,IACpB,OAAO,eAAC,IAAD,WACH,cAAC,IAAD,UACI,eAAC,IAAD,CACAvC,WAAW,SACXmB,EAAE,IACFI,EAAE,IACFC,YAAY,SACZC,YAAY,SACZtB,QAAQ,WANR,UAQI,cAAC,IAAD,CAAMuB,GAAG,IAAIC,UAAU,YAAYN,SAAS,KAAKO,WAAW,OAA5D,yBACA,cAAC,IAAD,CAAMvB,GAAIwB,IAAgBtB,MAAM,mBAGxC,cAAC,IAAD,UACQ,eAAC,IAAD,CACAuB,gBAAiB,CAACb,GAAG,iBAAmBD,KAAM,iBAC9Ce,IAAK,EACLZ,EAAG,EAHH,UAII,cAACR,EAAD,CAAUE,KAAO2B,IAAY5B,KAAK,UAAUE,UAAU,cACtD,cAACH,EAAD,CAAUE,KAAO4B,IAAe7B,KAAK,aAAaE,UAAU,aAC5D,cAACH,EAAD,CAAUE,KAAO6B,IAAU9B,KAAK,QAAQE,UAAU,aAClD,cAACH,EAAD,CAAUE,KAAO8B,IAAY/B,KAAK,UAAUE,UAAU,qBCxB3D,SAAS8B,IACpB,OAAO,eAAC,IAAD,WACH,cAAC,IAAD,UACI,eAAC,IAAD,CACA5C,WAAW,SACXmB,EAAE,IACFI,EAAE,IACFC,YAAY,SACZC,YAAY,SACZtB,QAAQ,WANR,UAQI,cAAC,IAAD,CAAMuB,GAAG,IAAIC,UAAU,YAAYN,SAAS,KAAKO,WAAW,OAA5D,mCACA,cAAC,IAAD,CAAMvB,GAAIwB,IAAgBtB,MAAM,mBAGxC,cAAC,IAAD,UACQ,eAAC,IAAD,CACAuB,gBAAiB,CAACb,GAAG,iBAAmBD,KAAM,iBAC9Ce,IAAK,EACLZ,EAAG,EAHH,UAII,cAACR,EAAD,CAAUE,KAAOgC,IAAWjC,KAAK,SAASE,UAAU,aACpD,cAACH,EAAD,CAAUE,KAAOiC,IAASlC,KAAK,OAAOE,UAAU,YAChD,cAACH,EAAD,CAAUE,KAAOkC,IAAcnC,KAAK,MAAME,UAAU,aACpD,cAACH,EAAD,CAAUE,KAAOmC,IAASpC,KAAK,OAAOE,UAAU,aAChD,cAACH,EAAD,CAAUE,KAAOoC,IAAMrC,KAAK,IAAIE,UAAU,qBC5B/C,SAASoC,EAASC,GAC7B,OAAO,cAAC,IAAD,CACPlD,EAAE,cACFc,KAAM,CAAEC,KAAM,QAAUC,GAAG,OAC3BtB,MAAO,CAAEyD,QAASD,EAAME,UAAY,QAAQ,QAC5CC,aAAa,KACD7B,YAAY,SACZD,YAAY,WACZrB,QAAQ,WAPb,SASH,eAAC,IAAD,CACAL,QAAS,CAAEkB,KAAK,SAAWC,GAAI,OAC/BjB,WAAY,CAAEgB,KAAK,QAAUC,GAAG,UAChClB,eAAe,gBACfoB,EAAE,IAJF,UAMI,eAAC,IAAD,CACAjB,EAAE,OACFD,EAAE,MAFF,UAII,cAAC,IAAD,CACA0B,UAAU,QACVN,SAAS,KACTO,WAAW,OACX2B,UAAW,CAAEvC,KAAK,eAAiBC,GAAG,kBACtCE,EAAE,IALF,8BAOA,cAAC,IAAD,CACAQ,UAAU,QACVN,SAAS,KACTO,WAAW,SACX2B,UAAW,CAAEvC,KAAK,eAAiBC,GAAG,kBACtCE,EAAE,IALF,SAKO,4BAEX,eAAC,IAAD,CACIrB,QAAQ,SACRE,WAAW,QACXD,eAAe,QACfoB,EAAE,IAJN,UAMI,eAAC,IAAD,CACAlB,EAAE,OACFH,QAAQ,MACRC,eAAe,QACfC,WAAW,SACXmB,EAAE,IALF,UAOI,cAAC,IAAD,CAAMQ,UAAU,QAAQN,SAAS,KAAMmC,GAAG,IAA1C,sDACA,mBAAGpD,KAAK,yCAAR,SACI,eAAC,IAAD,CACAH,EAAE,cACFH,QAAQ,MACRC,eAAe,MACfC,WAAW,SAJX,UAMI,cAAC,IAAD,CACAG,QAAQ,QACRsD,aAAW,OACXvD,EAAE,IACFD,EAAE,IACFuD,GAAG,IALH,SAOI,cAAC,IAAD,CAAMnD,GAAKqD,IAAiBxD,EAAE,IAAID,EAAE,IAAIM,MAAM,YAEnD,cAAC,IAAD,CAAMc,SAAS,KAAKO,WAAW,SAASrB,MAAM,YAA9C,qCAIX,cAACqC,EAAD,IACA,cAACtB,EAAD,IACA,cAACiB,EAAD,YCtED,SAASoB,IACpB,IAAI,EAAsBC,oBAAkB,GAA5C,mBAAKC,EAAL,KAAaC,EAAb,KACA,OAAO,cAAC,IAAD,CACPC,IAAI,IACJC,SAAS,QACT/D,EAAG4D,EAAS,cAAc,cAHnB,SAKH,eAAC,IAAD,CACA/D,QAAS,CAAEkB,KAAO,SAAWC,GAAI,OACjCjB,WAAW,QACXD,eAAe,QACfkE,GAAI,GACJhE,EAAE,OACFC,EAAE,KACFiB,EAAE,IAPF,UASI,cAAC,IAAD,CACA+C,IAAI,uDACJhE,EAAE,KACFD,EAAE,OAEF,cAAC,IAAD,CACAkE,UAAQ,EACRC,MAAOP,EAAQ,SAAS,0BACxBlC,UAAU,QACVxB,QAAQ,iBAJR,SAMI,cAAC,IAAD,CACAsD,aAAW,OACXY,YAAY,aACZC,QACI,SAACC,GACGT,GAAWD,IALnB,SASI,cAAC,IAAD,CAAMxD,GACFwD,EAAQW,IAAc3C,UAKlC,cAACqB,EAAD,CAAUG,UAAWQ,S,qBCjDlB,SAASY,EAAT,GAAwE,IAAjDC,EAAgD,EAAhDA,MAAQC,EAAwC,EAAxCA,MAC1C,OAAO,cAAC,IAAD,CACP1E,EAAE,OACFkB,EAAE,IAFK,SAIH,eAAC,IAAD,CACArB,QAAQ,SACRC,eAAe,gBACfC,WAAW,QAHX,UAKI,cAAC,IAAD,CAAMqB,SAAS,KAAKO,WAAW,OAA/B,SAAuC8C,IACvC,cAAC,IAAD,UACKC,EAAMC,KAAI,YAAW,IAAThE,EAAQ,EAARA,KACT,OAAO,cAAC,IAAD,CACPT,QAAQ,WACRqD,GAAG,IAFI,SAIH,cAAC,IAAD,CAAM7B,UAAU,YAAYN,SAAS,KAArC,SAA4CT,gB,uDCvBvDiE,EAA6B,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACuBC,MAAMF,GAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UADlD,UACnCD,EADmC,QAErCE,IAAEC,SAAUH,GAFyB,yCAG9BA,GAH8B,gCAKlC,IALkC,2CAAH,sDAuC7BI,EAA2B,SAAEC,GACtC,IAD0F,EACpFC,EAAS,kBACXC,EAAuC,IAAIC,IAC/C,EAnBmD,SAAEP,GACrD,IACIQ,EAAyB,GACzBC,EAAiCT,EAAKU,MAFjC,wCAGT,IAAKT,IAAEU,OAAOF,GACV,IAAI,IAAIG,EAAE,EAAEA,EAAEH,EAAMI,SAASD,EACzBJ,EAAKM,KAAML,EAAMG,GAAGG,YACpBf,EAAOA,EAAKgB,QAASP,EAAMG,GAAGG,WAAa,MAGnD,MAAO,CACHf,KAAMA,EACNQ,KAAMA,GAO4BS,CAA8Bb,GAA5DJ,EAAR,EAAQA,KAAOQ,EAAf,EAAeA,KACTU,EAAQlB,EAAKmB,MAAM,MACrBC,EAAS,EAAIR,EAAS,EACtBS,EAAwB,CACxBC,KAAK,GACLC,KAAO,GACPC,MAAO,GAT+E,cAWzEN,GAXyE,IAW1F,IAAI,EAAJ,qBAAwB,CAAC,IAAhBO,EAAe,QACpB,GAAIA,EAAKC,SAAS,MAqBb,CAED,IAFE,IAAD,IACKC,EAAOF,EAAKN,MAAM,MAChBS,EAAE,EAAEA,EAAGD,EAAMd,OAAO,IAAKe,EAAE,CAAC,IAAD,IAM/B,GAJAtB,EAAIuB,IAAKR,EAAa,CAClB9B,OAAQ,UAAAe,EAAIwB,IAAIT,UAAR,eAAqB9B,QAAS,GACtCwC,SAAS,UAAAzB,EAAIwB,IAAKT,UAAT,eAAsBU,SAAQJ,EAAMC,IAAMD,EAAMC,KAEzDpB,EAAKY,GAAGV,MAAOL,GAAU,GACvBO,EACF,IAAIoB,EAA8B,WAAWC,KAAMzB,EAAKY,IACrDY,GACC1B,EAAIuB,IAAK,CACLP,KAAM,OACNC,KAAMS,EAAK,GAAGjB,WACdS,MAAQZ,GACR,CACArB,MAAM,GACNwC,QAAUvB,EAAKY,GAAGJ,QAAQ,gBAAkB,UAGnD,CACD,IAYK,IAXL,EADoBR,EAAKY,GAAGJ,QAAQ,WAAa,IAAIA,QAAQ,WAAa,MAAMkB,OACvDf,MAAM,MAA/B,mBAAK5B,EAAL,KAAaI,EAAb,KACA,GAAGa,EAAKY,GAAGM,SAAU,SAAYlB,EAAKY,GAAGM,SAAU,SAAYlB,EAAKY,GAAGM,SAAU,UAAalB,EAAKY,GAAGM,SAAU,UAC1Gd,EACFN,EAAIuB,IAAK,CACLP,KAAM,OACNC,KAAM,QACNC,MAAOZ,GACP,CACArB,MAAOA,EACPwC,QAASpC,SAGbW,EAAIuB,IAAKR,EAAa,CAClB9B,OAAQ,UAAAe,EAAIwB,IAAIT,UAAR,eAAqB9B,QAAS,GACtCwC,SAAS,UAAAzB,EAAIwB,IAAKT,UAAT,eAAsBU,SAAtB,mBAA0CpC,EAA1C,iCAAsE,IAAIJ,EAAM,IAAhF,cAIrB6B,IAEJd,EAAIuB,IAAKR,EAAa,CAClB9B,OAAQ,UAAAe,EAAIwB,IAAIT,UAAR,eAAqB9B,QAAS,GACtCwC,SAAS,UAAAzB,EAAIwB,IAAKT,UAAT,eAAsBU,SAAQJ,EAAMA,EAAMd,OAAO,IAAMc,EAAMA,EAAMd,OAAO,OAErFD,MApEsB,CACxB,GAAIa,EAAKU,WAAW,KAAK,CACrB,IAAMC,EAAiCX,EAAKf,MAAM,OAC5C2B,EAAepC,IAAEU,OAAQyB,GAAW,EAAGA,EAAO,GAAGrB,WAAWF,OAC5DtB,EAAiBkC,EAAKT,QAAS,KAAO,IAAKkB,OACjDb,EAAa,CACTC,KAAM,SACNC,KAAK,GAAD,OAAKc,GACTb,MAAOZ,GAEXN,EAAIuB,IAAKR,EAAa,CAClB9B,MAAQA,EACRwC,QAAU,SAEb,CAAC,IAAD,IACDzB,EAAIuB,IAAKR,EAAa,CAClB9B,OAAQ,UAAAe,EAAIwB,IAAIT,UAAR,eAAqB9B,QAAS,GACtCwC,SAAS,UAAAzB,EAAIwB,IAAKT,UAAT,eAAsBU,SAAQN,GAAQA,MAGrDb,IAhCgF,8BAmF1F,OAAON,G,QC3HLF,EAAOkC,E,6CCeE,SAASC,EAAT,GAA6G,IFGlFC,EEHCC,EAAgF,EAAhFA,KAAOC,EAAyE,EAAzEA,OAC9C,MAAkB,WAAdD,EAAKnB,KACE,eAAC,IAAD,CACP3G,QAAQ,SADD,UAGH,eAAC,IAAD,CAAM8B,WAAW,OAAOP,UFFMsG,EEEoBC,EAAKlB,KFDrD,MAANiB,EACO,KACJ,MEDC,cAAiEE,EAAOnD,MAAxE,OACA,cAAC,IAAD,CAASoD,YAAY,eACrB,eAAC,IAAD,CAAMzG,SAAS,UAAf,cAA2B0G,YAAMF,EAAOX,QAAQf,QAAQ,MAAM,SAA9D,UAGe,SAAdyB,EAAKnB,KACH,cAAC,IAAD,CAAK1F,KAAM,CAAEC,KAAK,OAASC,GAAG,MAAOM,EAAE,IAAIJ,EAAE,IAA7C,SACP,cAAC,IAAD,CACA6G,iBAAiB,EACjBC,SAAUL,EAAKlB,KACf/G,MAAOuI,IAHP,SAKML,EAAOX,YAEO,SAAdU,EAAKnB,KACO,UAAdmB,EAAKlB,KACE,cAAC,IAAD,CACPxC,IAAM2D,EAAOX,QACbiB,IAAI,UAGG,mBACP/H,KAAOyH,EAAOX,QADP,SAELW,EAAOnD,QAIL,6B,yCCnCD,SAAS0D,GAAT,GAA8D,IAA3ClE,EAA0C,EAA1CA,IAC9B,EAA2BN,mBAAiB,IAA5C,mBAAQuB,EAAR,KAAekD,EAAf,KAQA,GAPAC,qBAAU,YACS,uCAAG,4BAAAvD,EAAA,sEACYF,EAAmBX,GAD/B,OACRqB,EADQ,OAEd8C,EAAS9C,GAFK,2CAAH,qDAIfgD,MAEM,gEAAPrE,EACC,OAAO,cAAC,IAAD,CAAesE,cAAe,CAACC,MAAMC,SAAUvD,IAC1D,IAAMwD,EAA8CrD,EAAeH,GAC7DyD,EAA8CC,MAAMC,KAAKH,GAAYI,QAAQ,WAAShD,GAAQ,IAAD,mBAAbQ,EAAa,UAC/F,MAAkB,UAAXA,EAAEG,QAEPsC,EAAWH,MAAMC,KAAKH,GAAY/D,KAAK,WAASmB,GAAQ,IAAD,mBAAbQ,EAAa,KAAX0C,EAAW,KACzD,MAAc,UAAX1C,EAAEG,KACM,6BACJ,cAAC,IAAD,CACPzG,EAAG,CAAEe,KAAK,OAASC,GAAG,MADf,SAGH,cAACyG,EAAD,CAAyBE,KAAMrB,EAAGsB,OAAQoB,GAApBlD,QAGxBmD,EAAYN,EAAQhE,KAAK,WAAWmB,GAAO,IAAD,mBAAdQ,EAAc,KAAX0C,EAAW,KAC5C,OAAO,cAACvB,EAAD,CAAiCE,KAAMrB,EAAGsB,OAAQoB,GAA5B,QAAQlD,MAEzC,OAAO,eAAC,IAAD,WAEFiD,EACD,cAAC,IAAD,CACIlH,gBAAgB,gBAChBC,IAAK,EACLZ,EAAG,EACHgI,GAAG,OAJP,SAMSD,O,yBC/CD,SAASE,GAAT,GAA0C,IAA1BC,EAAyB,EAAzBA,OACtBC,EAAU,CACdC,OAAQ,CACNC,MAAM,GAERC,OALmD,EAAhBA,QAOrC,OACI,qBAAKC,UAAU,QAAf,SACE,cAAC,KAAD,CAAOJ,QAASA,EAASD,OAAQA,EAAQ5C,KAAK,QAAQ5G,MAAM,U,wBCFzD8J,GAAkB,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,YAC9B,OAD2F,EAAjDC,OAGnC,eAAC,IAAD,CACPxJ,GAAIyJ,IACJ9J,WAAW,SACXG,QAAQ,YACRqB,YAAY,iBACZC,YAAY,SACZvB,EAAE,cACFD,EAAE,OACFkB,EAAE,IACF4I,QAAQ,KATD,UAWH,cAAC,IAAD,CAAMvG,GAAG,IAAI5B,WAAW,OAAxB,mCACA,eAAC,KAAD,CAAMoI,OAAO,SAASpI,WAAW,OAAOzB,QAAQ,WAAW4J,QAAQ,KAAK5I,EAAE,IAAIqC,GAAG,IAAIpD,KAAMwJ,EAA3F,uBAEI,cAAC,IAAD,CAAMvJ,GAAI4J,aAfP,8BCQA,SAAUC,GAAgB/G,GACrC,IAAI,EAAsBS,oBAAkB,GAA5C,mBAAKC,EAAL,KAAaC,EAAb,KACA,OAAO,cAAC,IAAD,CACPqG,UAAU,SACVlK,EAAG,CAAEe,KAAK,OAASC,GAAG,OACtBf,EAAG,CAAEc,KAAM,cAAgBC,GAAI,eAC/BmJ,UAAU,MACVjJ,EAAE,IACFI,EAAE,IACF+B,aAAa,MACbnD,QAAQ,iBARD,SAUH,eAAC,IAAD,CACAL,QAAQ,MACRC,eAAe,gBACfC,WAAW,QAHX,UAKI,cAAC,IAAD,CAAKC,EAAE,OAAP,SACI,eAAC,IAAD,CACAH,QAAS,CAAEkB,KAAK,SAAWC,GAAG,OAC9BlB,eAAe,gBACfC,WAAY,CAAEgB,KAAK,SAAWC,GAAG,SAHjC,UAKI,eAAC,IAAD,CACAnB,QAAQ,SACRC,eAAe,gBACfC,WAAW,QACXC,EAAE,OAJF,UAMI,cAAC,EAAD,CAAayE,MAAOvB,EAAMkH,OAAQ1F,MAAOxB,EAAMwB,QAC/C,eAAC,IAAD,CAAMxD,EAAE,IAAIE,SAAS,KAArB,cAA6B8B,EAAMmH,YAAnC,OACA,cAAC,IAAD,CACAlH,QAAYS,EAAS,QAAU,OAC/B1C,EAAE,IAFF,SAII,cAACiH,GAAD,CAAQlE,IAAKf,EAAM2B,QAEvB,cAAC,GAAD,CAAiB+E,OAAQ1G,EAAM0G,OAAQD,YAAazG,EAAMyG,iBAE9D,cAACR,GAAD,CAAOC,OAAQlG,EAAMwB,MAAMC,KAAI,YAAW,OAAD,EAARW,QAAyBkE,OAAQtG,EAAMwB,MAAMC,KAAI,YAAW,OAAD,EAARhE,eAG5F,cAAC,IAAD,CACAuD,UAAQ,EACRC,MAAQP,EAAS,QAAU,UAC3B1D,QAAQ,iBACRwB,UAAU,QAJV,SAMI,cAAC,IAAD,CACA8B,aAAW,eACXY,YAAY,aACZC,QAAU,SAACC,GACPT,GAAaD,IAJjB,SAOI,cAAC,IAAD,CAAMxD,GAAKwD,EAAS0G,IAAiBC,e,iCC/D1C,SAASC,GAAT,GAAkF,IAAxDC,EAAuD,EAAvDA,QACrC,OAAO,cAAC,IAAD,CACPvK,QAAQ,OACRwK,gBAAgB,MAFT,SAIH,eAAC,IAAD,CACA7K,QAAQ,MACRC,eAAe,gBACfC,WAAW,SACXC,EAAE,OAJF,UAMI,eAAC,IAAD,CACAH,QAAQ,MACRE,WAAW,SAFX,UAII,cAAC,IAAD,CAAM4K,GAAG,IAAIvK,GAAKwK,KAAa3K,EAAE,IAAID,EAAE,IAAIM,MAAM,UACjD,cAAC,IAAD,CAAMqK,GAAG,IAAIvJ,SAAS,KAAKO,WAAW,OAAtC,2BAEJ,eAAC,IAAD,CACA9B,QAAQ,MACRE,WAAW,SACX0B,GAAG,IAHH,UAII,eAAC,IAAD,WACI,cAAC,IAAD,UACA,cAAC,IAAD,UAEI,cAAC,IAAD,CAAMrB,GAAKyK,KAAsB5K,EAAE,IAAID,EAAE,IAAIM,MAAM,aAGvD,eAAC,IAAD,WACI,cAAC,IAAD,CAAMqB,WAAW,OAAOD,UAAU,OAAlC,4BACA,cAAC,IAAD,CAAMoJ,UAAU,UAAUC,GAAG,IAA7B,0BACA,cAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,IAA7B,4BACA,cAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,IAA7B,6BACA,cAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,IAA7B,kCACA,cAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,IAA7B,+BAGR,cAAC,IAAD,CACA1G,QAAY,SAACC,GACTmG,KAFJ,SAKI,cAAC,IAAD,CAAMrK,GAAK4K,KAAoB/K,EAAE,IAAID,EAAE,IAAIM,MAAM,kBCxCtD,SAAS2K,GAAT,GAAiF,IAA3DC,EAA0D,EAA1DA,WACjC,EAAmCvH,mBAAiB,IAApD,mBAAQwH,EAAR,KAAmBC,EAAnB,KACA,EAAgDzH,oBAAkB,GAAlE,mBAAQ0H,EAAR,KAAyBC,EAAzB,KAWA,OAAMD,EAyBC,eAAC,IAAD,CACPrL,EAAE,OACF+D,SAAS,QACTwH,OAAO,KACPtL,EAAE,KAJK,UAMH,cAACuK,GAAD,CAAeC,QAAS,WACpBa,GAAkB,MAGtB,eAAC,IAAD,CACArL,EAAE,OACFD,EAAE,OACFwB,YAAY,QACZD,YAAY,OACZrB,QAAQ,QACRsL,KAAK,KACLC,UAAU,SAPV,UASI,cAAC,IAAD,CACA5L,QAAQ,SACRC,eAAe,QACfC,WAAW,QAHX,SAKMoL,EAAS9E,MAAM,MAAM1B,KAAK,SAACqE,EAAIlD,GAC7B,OAAO,eAAC,IAAD,CACPjG,QAAQ,MACRC,eAAe,QACfC,WAAW,SAHJ,UAMH,cAAC,IAAD,CAAM2L,GAAG,IAAIhK,UAAY,YAAzB,SAAuCsH,EAAE2C,UAAU,EAAE,KACrD,cAAC,IAAD,CAAMD,GAAG,IAAIhK,UAAY,QAAzB,SAAkCsH,EAAE2C,UAAU,EAAE3C,EAAEjD,SAAW,OAH5DD,QAOb,eAAC,IAAD,CACAjG,QAAQ,MACRC,eAAe,QACfC,WAAW,SAHX,UAKI,cAAC,IAAD,CAAM2L,GAAG,IAAIhK,UAAY,YAAzB,SAAsC,OACtC,cAAC,KAAD,CACAkK,OAAO,OACPF,GAAG,IACH1L,EAAE,OACF0B,UAAY,QACZmK,UAAW,SAACvH,GACS,KAAdA,EAAEwH,WAnFD,SAACC,EAAmBC,GACpC,GAA6B,UAA1BD,EAAQE,eAAwD,QAA1BF,EAAQE,cAC7Cf,EAAYa,GACZX,EAAY,QACX,CACD,IAAIc,EAAgBhB,EAAYa,GAChCX,EAAcD,EAAW,OAAOa,EAAMG,MAAM,OAAQD,GAExDF,EAAMG,MAAQ,GA6EEC,CADsB9H,EAAE+H,cAAcF,MAAM/E,OACvB9C,EAAE+H,eACvB/H,EAAEgI,iBACChI,EAAE+H,cAAcE,eACZjI,EAAE+H,cAAcE,cAAcA,gBAC7BjI,EAAE+H,cAAcE,cAAcA,cAAcC,UAAYlI,EAAE+H,cAAcE,cAAcA,cAAcE,gBAKpHC,OAAQ,CAAEC,QAAQ,mBAnFnB,cAAC,IAAD,CACPzI,UAAQ,EACRC,MAAM,gBACNjE,QAAQ,iBACRwB,UAAU,QAJH,SAMH,cAAC,IAAD,CACIT,OAAQ,CAAEf,QAAQ,QAClB6D,SAAS,QACTwH,OAAQ,CAAExK,KAAM,IAAKC,GAAG,MACxB4L,MAAO,CAAE7L,KAAM,IAAKC,GAAG,MACvBf,EAAE,KACFD,EAAE,KACFqD,aAAa,MACbG,aAAW,kBACXY,YAAY,aACZC,QAAY,SAACC,GACTgH,GAAkB,IAX1B,SAcQ,cAAC,IAAD,CAAMhL,MAAM,QAAQF,GAAKwK,KAAa3K,EAAE,KAAKD,EAAE,WCnCpD,SAAU6M,KACrB,MAA8BlJ,mBAA6B6D,GAA3D,mBAAQsF,EAAR,KAAgBC,EAAhB,KACMC,EAAoB,SAAUC,GAChC,GAAuB,SAAnBA,EAAUC,MACV,GAA0B,YAAtBD,EAAUE,QAEV,YADAJ,EAAS,aRGYK,EQHEH,EAAUE,QRItC7H,EAAK+H,MAAM,SAAEC,EAAkBC,GAClC,MAAiB,eAAVH,EACLE,EAAElD,OAASmD,EAAEnD,OAAS,GAAI,EAAQkD,EAAElD,OAASmD,EAAEnD,OAAS,GAAI,aQHxD,GAAuB,WAAnB6C,EAAUC,MAChB,GAA0B,YAAtBD,EAAUE,QAEV,YADAJ,EAAS,aRRcS,EQQEP,EAAUE,QRPxC7H,EAAKwD,QAAQ,SAAEE,GAClB,OAAOA,EAAEtE,MAAMC,KAAI,YAAW,OAAD,EAARhE,QAAwB8M,KAAK,IAAIxB,cAAcrF,SAAU4G,EAAKvB,gBAAmBjD,EAAEnE,IAAIoH,cAAcrF,SAAU4G,EAAKvB,gBAAmBjD,EAAEoB,OAAO6B,cAAcrF,SAAU4G,EAAKvB,gBAAmBjD,EAAEqB,YAAY4B,cAAcrF,SAAU4G,EAAKvB,0BQS1P,GAAuB,WAAnBgB,EAAUC,MAChB,GAA0B,YAAtBD,EAAUE,QAEV,YADAJ,GRzBuB7F,EQyBF+F,EAAUE,QRxBpC7H,EAAKwD,QAAQ,SAAEE,GAClB,OAAOA,EAAEtE,MAAMC,KAAI,qBAAGhE,KAAcsL,iBAAerF,SAASM,EAAKwG,+BQ0B3D,GAAuB,OAAnBT,EAAUC,MAChB,GAA0B,YAAtBD,EAAUE,QAEV,YADAJ,GRxB2BY,EQwBDV,EAAUE,QRvBzC7H,EAAKwD,QAAQ,SAAEE,GAClB,OAAOA,EAAEoB,OAAO6B,gBAAkB0B,EAAM1B,wBQ0BpCc,EAAS,YAAIvF,IR5BgB,IAAEmG,EANJzG,EAYAsG,EAMFJ,GQkBjC,OAAO,eAAC,IAAD,CACPpN,EAAE,OACFC,EAAE,OACFiB,EAAE,IAHK,UAKH,cAAC,IAAD,CAASA,EAAE,IAAIZ,MAAM,cAAcsN,UAAU,SAA7C,sBACA,cAAC,IAAD,CACA/N,QAAQ,SACRE,WAAW,SACXmB,EAAG,EAHH,SAKK4L,EAAMnI,KAAK,SAACqE,EAAkBlD,GAC5B,OAAQ,cAACmE,GAAD,CAERN,YAAcX,EAAEW,YAChBC,OAAWZ,EAAEY,OACbQ,OAAWpB,EAAEoB,OACbvF,IAAOmE,EAAEnE,IACTwF,YAAerB,EAAEqB,YACjB3F,MAAOsE,EAAEtE,MACTmJ,MAAO7E,EAAE6E,OAPJ/H,QAYZ,cAACmF,GAAD,CAAYC,WAAY,SAAS4C,GAC7B,OCC0B,SAAE/B,EAAmBgC,GACvD,IAAMC,EAvBgC,SAAEA,GACxC,OApBgCF,EAoBZE,EAAMC,KAnBtB,CAAE,OAAS,SAAW,KAAO,UAAWrH,SAAUkH,GAoB7B,WAAfE,EAAMC,MAAqBD,EAAME,KAAKnI,OAAS,GAAwB,WAAfiI,EAAMC,MAA2C,IAAtBD,EAAME,KAAKnI,OACzF,CACHmH,KAAMc,EAAMC,KACZd,SAlBgBc,EAkBKD,EAAMC,KAlBKE,EAkBCH,EAAME,KAjBtC,OAATD,EACkB,OAAXE,EAAI,GAAc,OAASA,EAAI,GACtB,WAATF,EACA,CAAE,SAAW,OAAS,aAAe,aAAe,OAAS,OAAS,OAAQrH,SAASuH,EAAI,IAC5FA,EAAI,GAAK,UACD,SAATF,EACa,OAAXE,EAAI,GAAc,aAA4B,OAAXA,EAAI,GAAc,aAAe,UAC7D,WAATF,EACEE,EAAIV,KAAM,KACd,YAWQ,CACHP,KAAMc,EAAMC,KACZd,QAAS,WAKV,CACHD,KAAM,UACNC,QAAS,MA9BS,IAAEc,EAAgBE,EANZL,EA0CRM,CAjEkB,SAAEC,GAE5C,IAAMC,GADND,EAAcA,EAAYjH,OAAO6E,eACP5F,MAAO,OACjC,OAAMiI,EAAMvI,OAKL,CACHkI,KAAOK,EAAM,GACbJ,KAAOI,EAAMC,MAAO,EAAID,EAAMvI,SANvB,CACHkI,KAAO,UACPC,KAAO,IA2D0BM,CAAqBzC,IAE9D,OADAA,EAAUiC,EAAMd,KACI,SAAfc,EAAMd,KACe,YAAlBc,EAAMb,SAA2C,OAAlBa,EAAMb,SACrCY,EAASC,GACH,GAAN,OAAUjC,EAAV,sCAEAgC,EAASC,GACH,GAAN,OAAUjC,EAAV,sCAA+CiC,EAAMb,QAArD,WAEkB,WAAfa,EAAMd,KACS,YAAlBc,EAAMb,SAA2C,OAAlBa,EAAMb,SACrCY,EAASC,GACH,GAAN,OAAUjC,EAAV,sCAEAgC,EAASC,GACH,GAAN,OAAUjC,EAAV,0CAAmDiC,EAAMb,QAAzD,cAEkB,OAAfa,EAAMd,KACS,YAAlBc,EAAMb,SAA2C,OAAlBa,EAAMb,SACrCY,EAASC,GACH,GAAN,OAAUjC,EAAV,sCAEAgC,EAASC,GACH,GAAN,OAAUjC,EAAV,gCAAyCiC,EAAMb,QAA/C,aAEkB,WAAfa,EAAMd,KACS,YAAlBc,EAAMb,SAA2C,OAAlBa,EAAMb,SACrCY,EAASC,GACH,GAAN,OAAUjC,EAAV,sCAEAgC,EAASC,GACH,GAAN,OAAUjC,EAAV,0CAAmDiC,EAAMb,WAG7DY,EAASC,GACH,mBDtCK5B,CAAa0B,EAAMd,SE1DvB,SAASyB,KACtB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACAb,UAAU,SACV7N,WAAW,SACXmB,EAAE,IACFlB,EAAE,UAGF,cAAC6M,GAAD,IACA,cAACnJ,EAAD,IACA,cAAC,EAAD,OClBN,IAYegL,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB5J,MAAK,YAAkD,IAA/C6J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,GAAD,MAEFY,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c93e40e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/layout\";\r\nimport { \r\n    SiGithub, \r\n    SiTwitter ,\r\n    SiLinkedin ,\r\n    SiDocker\r\n} from \"react-icons/si\";\r\nimport Icon from \"@chakra-ui/icon\";\r\n\r\nexport const Footer = ():React.ReactElement =>{\r\n    /*const profiles = [\r\n        'https://github.com/ssrajputtheboss',\r\n        'http://twitter.com/ssrajputtheboss',\r\n    ];\r\n    const icons = [\r\n        SiGithub,\r\n        SiTwitter,\r\n        SiLinkedin\r\n    ]\r\n    const colors = [\r\n        'white',\r\n        'twitter.500',\r\n        'blue.800'\r\n    ]*/\r\n    return <footer style={{ height:'fit-content', width:'100vw' }}>\r\n        <Flex\r\n        flexDir=\"row\"\r\n        justifyContent=\"space-around\"\r\n        alignItems=\"center\"\r\n        w=\"full\"\r\n        h=\"32\"\r\n        bgColor=\"black\"\r\n        >\r\n            <a href=\"https://github.com/ssrajputtheboss\">\r\n                <Icon as={SiGithub} color=\"white\" />\r\n            </a>\r\n            <a href=\"http://twitter.com/ssrajputtheboss\">\r\n                <Icon as={SiTwitter} color=\"twitter.500\" />\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/shashank-singh-0aaab8208/\">\r\n                <Icon as={SiLinkedin} color=\"blue.800\" />\r\n            </a>\r\n            <a href=\"https://hub.docker.com/u/ssrajputtheboss\">\r\n                <Icon as={SiDocker} color=\"blue.500\" />\r\n            </a>\r\n        </Flex>\r\n    </footer>\r\n}\r\n//             {profiles.map((url:string,i:number)=><ProfileLinkExpandable color={colors[i]} icon={icons[i]} url={url} />)}","import{\r\n    Tag,\r\n    Text,\r\n    Icon,\r\n    Flex\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { Skill } from '../../../../Models';\r\n\r\nexport default function SkillTag( { name , icon , iconColor } : Skill ):React.ReactElement{\r\n    return <Tag\r\n    maxW={{ base: \"20\" , lg:\"2xl\"}}\r\n    _hover={{ bgColor:\"blackAlpha.400\" }}\r\n    >\r\n        <Flex\r\n        flexDir=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        p=\"2\">\r\n            <Icon as={icon} h={{ sm: \"8\", lg:\"20\"}} w={{ sm: \"8\", lg:\"20\"}} color={iconColor} />\r\n            <Text fontSize=\"smaller\" color=\"green.900\">{ name }</Text>\r\n        </Flex>\r\n    </Tag>\r\n}","import React from \"react\";\r\nimport {\r\n    Text ,\r\n    Grid ,\r\n    Flex ,\r\n    Menu ,\r\n    MenuList ,\r\n    MenuButton ,\r\n    Icon\r\n} from '@chakra-ui/react';\r\nimport { RiFlutterFill } from 'react-icons/ri';\r\nimport { \r\n    SiAndroidstudio ,\r\n    SiReact ,\r\n    SiNodeDotJs ,\r\n//    SiDjango ,\r\n    SiDocker ,\r\n    SiSpring,\r\n    SiJavascript,\r\n    SiTypescript,\r\n} from 'react-icons/si';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport SkillTag from \"../SkillTag\";\r\n\r\nexport default function SkillMenu():React.ReactElement{\r\n    return <Menu>\r\n        <MenuButton>\r\n            <Flex \r\n            alignItems=\"center\"\r\n            p=\"2\"\r\n            m=\"1\"\r\n            borderColor=\"tomato\"\r\n            borderWidth=\"medium\"\r\n            bgColor=\"seashell\"\r\n            >\r\n                <Text mr=\"2\" textColor=\"green.900\" fontSize=\"sm\" fontWeight=\"bold\">Skills</Text>\r\n                <Icon as={FaChevronRight} color=\"green.900\"/>\r\n            </Flex>\r\n        </MenuButton>\r\n        <MenuList>\r\n                <Grid \r\n                templateColumns={{lg:'repeat(4, 1fr)' , base: 'repeat(3,1fr)'}}\r\n                gap={2}\r\n                p={2}>\r\n                    <SkillTag icon={ SiJavascript } name=\"JavaScript\" iconColor=\"yellow.400\" />\r\n                    <SkillTag icon={ SiTypescript } name=\"TypeScript\" iconColor=\"yellow.400\" />\r\n                    <SkillTag icon={ RiFlutterFill } name=\"Flutter\" iconColor=\"blue.400\" />\r\n                    <SkillTag icon={ SiAndroidstudio } name=\"Android\" iconColor=\"green.500\" />\r\n                    <SkillTag icon={ SiReact } name=\"React\" iconColor=\"blue.700\" />\r\n                    <SkillTag icon={ SiNodeDotJs } name=\"NodeJS\" iconColor=\"green.400\" />\r\n                    <SkillTag icon={ SiDocker } name=\"Docker\" iconColor=\"blue.500\" />\r\n                    <SkillTag icon={ SiSpring } name=\"Spring Boot\" iconColor=\"green.400\" />\r\n                </Grid>\r\n        </MenuList>\r\n    </Menu>;\r\n}","import React from \"react\";\r\nimport {\r\n    Text ,\r\n    Grid ,\r\n    Flex ,\r\n    Menu ,\r\n    MenuList ,\r\n    MenuButton ,\r\n    Icon\r\n} from '@chakra-ui/react';\r\nimport { \r\n    DiPostgresql ,\r\n    DiSqllite\r\n} from 'react-icons/di';\r\nimport { \r\n    SiMongodb ,\r\n    SiMysql\r\n} from 'react-icons/si';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport SkillTag from \"../SkillTag\";\r\n\r\nexport default function DatabaseMenu():React.ReactElement{\r\n    return <Menu>\r\n        <MenuButton>\r\n            <Flex \r\n            alignItems=\"center\"\r\n            p=\"2\"\r\n            m=\"1\"\r\n            borderColor=\"tomato\"\r\n            borderWidth=\"medium\"\r\n            bgColor=\"seashell\"\r\n            >\r\n                <Text mr=\"2\" textColor=\"green.900\" fontSize=\"sm\" fontWeight=\"bold\"> Databases </Text>\r\n                <Icon as={FaChevronRight} color=\"green.900\"/>\r\n            </Flex>\r\n        </MenuButton>\r\n        <MenuList>\r\n                <Grid \r\n                templateColumns={{lg:'repeat(4, 1fr)' , base: 'repeat(3,1fr)'}}\r\n                gap={2}\r\n                p={2}>\r\n                    <SkillTag icon={ SiMongodb } name=\"MongoDB\" iconColor=\"green.600\" />\r\n                    <SkillTag icon={ DiPostgresql } name=\"PostgreSQL\" iconColor=\"blue.400\" />\r\n                    <SkillTag icon={ SiMysql } name=\"MySQL\" iconColor=\"blue.400\" />\r\n                    <SkillTag icon={ DiSqllite } name=\"SQLite3\" iconColor=\"blue.400\" />\r\n                </Grid>\r\n        </MenuList>\r\n    </Menu>;\r\n}","import React from \"react\";\r\nimport {\r\n    Text ,\r\n    Grid ,\r\n    Flex ,\r\n    Menu ,\r\n    MenuList ,\r\n    MenuButton ,\r\n    Icon\r\n} from '@chakra-ui/react';\r\nimport {\r\n    SiPython,\r\n    SiJava,\r\n    SiCplusplus,\r\n    SiDart,\r\n    SiC\r\n} from 'react-icons/si';\r\nimport { FaChevronRight } from 'react-icons/fa';\r\nimport SkillTag from \"../SkillTag\";\r\n\r\nexport default function LangMenu():React.ReactElement{\r\n    return <Menu>\r\n        <MenuButton>\r\n            <Flex \r\n            alignItems=\"center\"\r\n            p=\"2\"\r\n            m=\"1\"\r\n            borderColor=\"tomato\"\r\n            borderWidth=\"medium\"\r\n            bgColor=\"seashell\"\r\n            >\r\n                <Text mr=\"2\" textColor=\"green.900\" fontSize=\"sm\" fontWeight=\"bold\">Programming Languages</Text>\r\n                <Icon as={FaChevronRight} color=\"green.900\"/>\r\n            </Flex>\r\n        </MenuButton>\r\n        <MenuList>\r\n                <Grid \r\n                templateColumns={{lg:'repeat(4, 1fr)' , base: 'repeat(3,1fr)'}}\r\n                gap={2}\r\n                p={2}>\r\n                    <SkillTag icon={ SiPython } name=\"Python\" iconColor=\"blue.600\" />\r\n                    <SkillTag icon={ SiJava } name=\"Java\" iconColor=\"red.500\" />\r\n                    <SkillTag icon={ SiCplusplus } name=\"C++\" iconColor=\"blue.900\" />\r\n                    <SkillTag icon={ SiDart } name=\"Dart\" iconColor=\"blue.200\" />\r\n                    <SkillTag icon={ SiC } name=\"C\" iconColor=\"blue.400\" />\r\n                </Grid>\r\n        </MenuList>\r\n    </Menu>;\r\n}","import { \r\n    Box ,\r\n    Flex , \r\n    Text ,\r\n    IconButton,\r\n    Icon , \r\n} from '@chakra-ui/react';\r\nimport { CgOrganisation } from 'react-icons/cg';\r\nimport SkillMenu from './SkillMenu';\r\nimport DatabaseMenu from './DatabaseMenu';\r\nimport LangMenu from './LangMenu';\r\n\r\ninterface Props{\r\n    isVisible:boolean\r\n}\r\n\r\nexport default function ShowCard(props: Props): React.ReactElement{\r\n    return <Box\r\n    w=\"fit-content\"\r\n    maxW={{ base: \"300px\" , lg:\"3xl\" }}\r\n    style={{ display: props.isVisible ? 'block':'none' }}\r\n    borderRadius=\"xl\"\r\n                borderWidth=\"medium\"\r\n                borderColor=\"teal.900\"  \r\n                bgColor=\"gray.100\"\r\n    >\r\n        <Flex\r\n        flexDir={{ base:'column' , lg: 'row' }}\r\n        alignItems={{ base:'start' , lg:'center' }}\r\n        justifyContent=\"space-between\"\r\n        p=\"1\"\r\n        >\r\n            <Flex \r\n            h=\"full\" \r\n            w=\"min\"\r\n            >\r\n                <Text\r\n                textColor=\"black\" \r\n                fontSize=\"xl\" \r\n                fontWeight=\"bold\" \r\n                transform={{ base:'rotate(0deg)' , lg:'rotate(-90deg)'}} \r\n                p=\"2\"\r\n                > SHASHANK SINGH </Text>\r\n                <Text\r\n                textColor=\"black\" \r\n                fontSize=\"md\"\r\n                fontWeight=\"medium\"  \r\n                transform={{ base:'rotate(0deg)' , lg:'rotate(-90deg)'}} \r\n                p=\"2\">{\"Full stack developer\"}</Text>\r\n            </Flex>\r\n            <Flex\r\n                flexDir=\"column\"\r\n                alignItems=\"start\"\r\n                justifyContent=\"start\"\r\n                p=\"2\"\r\n                >\r\n                <Flex\r\n                w=\"full\"\r\n                flexDir=\"row\"\r\n                justifyContent=\"start\"\r\n                alignItems=\"center\"\r\n                p=\"2\"\r\n                >\r\n                    <Text textColor=\"black\" fontSize=\"sm\"  mx=\"2\">Currently B.Tech CSE 3rd year student at</Text>\r\n                    <a href=\"https://www.iiitkottayam.ac.in/#!/home\" >\r\n                        <Flex\r\n                        w=\"fit-content\"\r\n                        flexDir=\"row\"\r\n                        justifyContent=\"end\"\r\n                        alignItems=\"center\"\r\n                        >\r\n                            <IconButton\r\n                            bgColor=\"black\"\r\n                            aria-label=\"icon\"\r\n                            h=\"7\"\r\n                            w=\"7\"\r\n                            mx=\"2\"\r\n                            >\r\n                                <Icon as={ CgOrganisation } h=\"5\" w=\"5\" color=\"white\" />\r\n                            </IconButton>\r\n                           <Text fontSize=\"sm\" fontWeight=\"medium\" color=\"green.900\"> IIIT Kottayam </Text> \r\n                        </Flex>\r\n                    </a>\r\n                </Flex>\r\n                <LangMenu/>\r\n                <SkillMenu/>\r\n                <DatabaseMenu/>\r\n            </Flex>\r\n        </Flex>\r\n    </Box>\r\n}","import { \r\n    Box , \r\n    Flex , \r\n    Avatar , \r\n    IconButton , \r\n    Icon , \r\n    Tooltip \r\n} from '@chakra-ui/react';\r\nimport { \r\n    FaChevronRight ,\r\n    FaChevronLeft \r\n} from 'react-icons/fa';\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\nimport ShowCard from './ShowCard';\r\n\r\nexport default function Header() : React.ReactElement{\r\n    var [isOpen, setIsOpen] = useState<boolean>(false);\r\n    return <Box \r\n    top=\"0\"\r\n    position=\"fixed\"\r\n    w={isOpen ? 'max-content':'min-content'}\r\n    >   \r\n        <Flex\r\n        flexDir={{ base : 'column' , lg: 'row'}}\r\n        alignItems=\"start\"\r\n        justifyContent=\"start\"\r\n        mt={10}\r\n        w=\"full\"\r\n        h=\"40\"\r\n        p=\"4\"\r\n        >\r\n            <Avatar \r\n            src=\"https://avatars.githubusercontent.com/u/62293640?v=4\"\r\n            h=\"10\" \r\n            w=\"10\" />\r\n            \r\n            <Tooltip\r\n            hasArrow\r\n            label={isOpen? 'Shrink':'Expand To Read About Me'}\r\n            textColor=\"white\"\r\n            bgColor=\"blackAlpha.900\"\r\n            >\r\n                <IconButton\r\n                aria-label=\"Icon\"\r\n                colorScheme=\"blackAlpha\"\r\n                onClick={\r\n                    (e:any)=>{\r\n                        setIsOpen(!isOpen);\r\n                    }\r\n                }\r\n                >\r\n                    <Icon as={\r\n                        isOpen? FaChevronLeft:FaChevronRight\r\n                    } />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n            <ShowCard isVisible={isOpen} />\r\n\r\n        </Flex>\r\n    </Box>;\r\n}","import { \r\n    Box ,\r\n    Flex ,\r\n    Text ,\r\n    Tag\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { CardHead } from '../../../../Models';\r\n\r\nexport default function CardHeader( { title , langs } : CardHead ) :React.ReactElement{\r\n    return <Box\r\n    w=\"full\"\r\n    p=\"4\"\r\n    >\r\n        <Flex\r\n        flexDir=\"column\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"start\"\r\n        >\r\n            <Text fontSize=\"xl\" fontWeight=\"bold\">{title}</Text>\r\n            <Box>\r\n                {langs.map(({name})=>{\r\n                    return <Tag\r\n                    bgColor=\"teal.100\"\r\n                    mx=\"1\"\r\n                    >\r\n                        <Text textColor=\"green.900\" fontSize=\"sm\">{ name }</Text>\r\n                    </Tag>;\r\n                })}\r\n            </Box>\r\n        </Flex>\r\n    </Box>\r\n}","import _ from \"lodash\";\r\nimport { ReadMeKey , ReadMeValue , ReturnValue } from \"../Models\";\r\n\r\nexport const fetchReadMeFromURL : Function = async( url : string) : Promise<string> => {\r\n    const res : string | Response | (() => Promise<string>) = await fetch(url).then(res => res.text());\r\n    if( _.isString( res ) ){\r\n        return res;\r\n    }\r\n    return '';\r\n}\r\n\r\n/*\r\npossible types are :\r\n#+.*?\\n\r\n\\s*?\\n\r\n[\\w\\s\\n\\.]+?\r\n```.*?``` =>extract first\r\n!?[.*?](.*?)\\n => extract first\r\n*/\r\n\r\nexport const getHeaderSize : Function = ( c: string ): string => {\r\n    if( c === '1')\r\n        return 'xl';\r\n    return 'lg';\r\n}\r\n\r\nexport const extractCodeAndLinkFromReadMe : Function = ( text : string ) : ReturnValue=> {\r\n    let re = /(```(.|\\n)*?```)|(!?\\[.*?\\]\\(.*?\\))/g ;\r\n    let list : Array< string > = [];\r\n    let codes : null| RegExpMatchArray = text.match( re );\r\n    if( !_.isNull(codes) ){\r\n        for(let i=0;i<codes.length;++i){\r\n            list.push( codes[i].toString() );\r\n            text = text.replace( codes[i].toString() , '\\u0000' );\r\n        }\r\n    }\r\n    return {\r\n        text: text,\r\n        list: list\r\n    };\r\n}\r\n\r\nexport const getReadMeJSON : Function = ( data : string ) :  Map< ReadMeKey , ReadMeValue > =>{\r\n    const reCode = /```(.|\\n)*?```/g;\r\n    let obj : Map< ReadMeKey , ReadMeValue > = new Map();\r\n    const { text , list } : ReturnValue = extractCodeAndLinkFromReadMe( data );\r\n    const lines = text.split('\\n');\r\n    let k:number=0 , i:number=0;\r\n    let lastHeader :ReadMeKey = {\r\n        type:'',\r\n        info : '' ,\r\n        index: 0\r\n    }; \r\n    for( let line of lines ){\r\n        if(!line.includes('\\u0000')){//no \\0 present\r\n            if( line.startsWith('#')){\r\n                const hashes : RegExpMatchArray|null = line.match(/#+/g);\r\n                const count:number = _.isNull( hashes ) ? 1: hashes[0].toString().length;\r\n                const title : string = line.replace( /#/g , '' ).trim();\r\n                lastHeader = {\r\n                    type: 'header',\r\n                    info: `${count}`,\r\n                    index: i\r\n                } ;\r\n                obj.set( lastHeader , {\r\n                    title : title,\r\n                    content : ''\r\n                } )\r\n            }else{\r\n                obj.set( lastHeader , {\r\n                    title : obj.get(lastHeader)?.title || '' ,\r\n                    content: obj.get( lastHeader)?.content+line || line\r\n                });\r\n            }\r\n            ++i;\r\n        }else{\r\n            const parts= line.split('\\u0000')\r\n            for(let j=0;j<(parts.length-1);++j){\r\n                //line.replace('\\u0000',list[k])\r\n                obj.set( lastHeader , {\r\n                    title : obj.get(lastHeader)?.title || '' ,\r\n                    content: obj.get( lastHeader)?.content+parts[j] || parts[j]\r\n                });\r\n                if( list[k].match( reCode ) ){\r\n                    ++i;\r\n                    let lang : RegExpExecArray|null = /```(\\w+)/.exec( list[k] );\r\n                    if(lang){\r\n                        obj.set( {\r\n                            type: 'code' ,\r\n                            info: lang[0].toString(),\r\n                            index : i\r\n                        } , {\r\n                            title:'',\r\n                            content : list[k].replace(/```(\\w+)|```/g , '')\r\n                        } );\r\n                    }\r\n                }else{\r\n                    let link : string = list[k].replace(/\\[|!|\\)/g , '').replace(/\\]\\s*\\(/g , '\\0').trim();\r\n                    let [title , url] = link.split('\\0'); \r\n                    if(list[k].includes( '.png' ) || list[k].includes( '.jpg' ) || list[k].includes( '.jpeg' ) || list[k].includes( '.gif' )){\r\n                        ++i;\r\n                        obj.set( {\r\n                            type: 'link',\r\n                            info: 'image',\r\n                            index: i\r\n                        } , {\r\n                            title: title,\r\n                            content: url\r\n                        } );\r\n                    }else{\r\n                        obj.set( lastHeader , {\r\n                            title : obj.get(lastHeader)?.title || '' ,\r\n                            content: obj.get( lastHeader)?.content+`<a href=\"${url}\" style=\"color:blue;\">${\" \"+title+\" \"}</a>` || `<a href=\"${url}\">${title}</a>`\r\n                        });\r\n                    }\r\n                }\r\n                k++;\r\n            }\r\n            obj.set( lastHeader , {\r\n                title : obj.get(lastHeader)?.title || '' ,\r\n                content: obj.get( lastHeader)?.content+parts[parts.length-1] || parts[parts.length-1]\r\n            });\r\n            ++i;\r\n        }\r\n    }\r\n    return obj;\r\n}","import jsonData from '../data/data.json';\r\nimport { ProjectData } from '../Models';\r\nconst data = jsonData;\r\n\r\nexport const filterData : Function = ( lang : string ) : Array<ProjectData> => {\r\n    return data.filter( ( v : ProjectData) => {\r\n        return v.langs.map(({ name })=>name.toLowerCase()).includes(lang.toLocaleLowerCase());\r\n    } );\r\n}\r\n\r\nexport const changeDirectory: Function = ( pname : string ) : Array<ProjectData> => {\r\n    return data.filter( ( v : ProjectData) => {\r\n        return v.header.toLowerCase() === pname.toLowerCase() ;\r\n    } );\r\n}\r\n\r\nexport const searchData : Function = ( word : string ) : Array<ProjectData> => {\r\n    return data.filter( ( v : ProjectData) => {\r\n        return v.langs.map(({name})=>{return name;}).join('').toLowerCase().includes( word.toLowerCase() ) || v.url.toLowerCase().includes( word.toLowerCase() ) || v.header.toLowerCase().includes( word.toLowerCase() ) || v.description.toLowerCase().includes( word.toLowerCase() );\r\n    } );\r\n}\r\n\r\nexport const sortData : Function = ( sType : string ) : Array<ProjectData> => {\r\n    return data.sort( ( x : ProjectData , y: ProjectData ) => {\r\n        return sType === 'increasing' ?\r\n        ( x.header > y.header ? 1: -1 ) : ( x.header < y.header ? 1: -1 );\r\n    } );\r\n}","import { \r\n    Box,\r\n    Text,\r\n    Flex,\r\n    Divider,\r\n} from \"@chakra-ui/layout\";\r\nimport { Image } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { \r\n    ReadMeKey ,\r\n    ReadMeValue\r\n} from \"../../../Models\";\r\nimport { getHeaderSize } from \"../../../helpers\";\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport parse from 'html-react-parser'; \r\n\r\nexport default function GetReadMeWidget( { rkey , rvalue} : { rkey : ReadMeKey , rvalue: ReadMeValue}) : React.ReactElement{\r\n    if( rkey.type === 'header'){\r\n        return <Flex\r\n        flexDir=\"column\"\r\n        >\r\n            <Text fontWeight=\"bold\" fontSize={ getHeaderSize( rkey.info) }> {rvalue.title} </Text>\r\n            <Divider orientation=\"horizontal\" />\r\n            <Text fontSize=\"smaller\"> {parse(rvalue.content.replace(/\\n/g,'<br>'))} </Text>\r\n        </Flex>;\r\n    }\r\n    else if( rkey.type === 'code' ){\r\n        return <Box maxW={{ base:\"100%\" , lg:\"xl\"}} m=\"2\" p=\"5\">\r\n        <SyntaxHighlighter\r\n        showLineNumbers={true}\r\n        language={rkey.info}\r\n        style={docco}\r\n        >\r\n            { rvalue.content }\r\n        </SyntaxHighlighter></Box>;\r\n    }else if( rkey.type === 'link' ){\r\n        if( rkey.info === 'image' ){\r\n            return <Image\r\n            src={ rvalue.content }\r\n            alt=\"image\"\r\n            />\r\n        }else{\r\n            return <a\r\n            href={ rvalue.content }\r\n            >{rvalue.title}\r\n            </a>;\r\n        }\r\n    }\r\n    else return <></>;\r\n}","import { Box , Grid } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport { \r\n    ReadMeProps ,\r\n    ReadMeKey ,\r\n    ReadMeValue\r\n} from \"../../Models\";\r\nimport { fetchReadMeFromURL, getReadMeJSON } from \"../../helpers\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport GetReadMeWidget from \"./GetReadMeWidget\";\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from \"remark-gfm\";\r\n\r\nexport default function ReadMe( { src } : ReadMeProps ) : React.ReactElement{\r\n    const [ text , setText ] = useState<string>('');\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const data:string = await fetchReadMeFromURL(src);\r\n            setText( data );\r\n        };\r\n        fetchData();\r\n    } );\r\n    if(src ==='https://ssrajputtheboss.github.io/collab-code-api/README.md')\r\n        return <ReactMarkdown remarkPlugins={[gfm]} children={text} />;\r\n    const readmeJson : Map< ReadMeKey , ReadMeValue > = getReadMeJSON( text );\r\n    const imgUrls : Array< [ReadMeKey , ReadMeValue]> = Array.from(readmeJson).filter( ( [k,v], i ) => {\r\n        return k.info === 'image';\r\n    })\r\n    const readmeUi = Array.from(readmeJson).map( ( [k,v], i ) => {\r\n        if(k.info === 'image')\r\n            return <></>;\r\n        return <Box\r\n        w={{ base:\"100%\" , lg:\"xl\"}}\r\n        >\r\n            <GetReadMeWidget key={i} rkey={k} rvalue={v} />\r\n        </Box>;\r\n    } );\r\n    const imageGrid = imgUrls.map( ([ k, v] , i) => {\r\n        return <GetReadMeWidget key={'image'+i} rkey={k} rvalue={v} />\r\n    } );\r\n    return <Box\r\n    >\r\n        {readmeUi}\r\n        <Grid \r\n            templateColumns='repeat(3,1fr)'\r\n            gap={1}\r\n            p={1}\r\n            id=\"grid\"\r\n            >\r\n                {imageGrid}\r\n        </Grid>\r\n    </Box>\r\n}","import Chart from 'react-apexcharts';\r\nimport { PieData } from '../../Models';\r\n\r\nexport  default function Donut({series , labels}:PieData){\r\n    const options = {\r\n      legend: {\r\n        show: false\r\n      },\r\n      labels\r\n    };\r\n    return (\r\n        <div className=\"donut\">\r\n          <Chart options={options} series={series} type=\"donut\" width=\"250\" />\r\n        </div>\r\n      );\r\n}","import { LiveProjectData } from \"../../../Models\";\r\nimport {\r\n    Box,\r\n    Flex,\r\n    Text,\r\n    Link,\r\n    Icon\r\n} from '@chakra-ui/react';\r\nimport { FiArrowRight } from \"react-icons/fi\";\r\n\r\nexport const LiveProjectLink = ({ projectLink,isLive } : LiveProjectData):React.ReactElement =>{\r\n    if(!isLive)\r\n        return <></>;\r\n    return <Box\r\n    as={Flex}\r\n    alignItems=\"center\"\r\n    bgColor=\"green.400\"\r\n    borderColor=\"whiteAlpha.200\"\r\n    borderWidth=\"medium\"\r\n    h=\"fit-content\"\r\n    w=\"full\"\r\n    p=\"2\"\r\n    rounded=\"md\"\r\n    >\r\n        <Text mx=\"4\" fontWeight=\"bold\">This project is live!</Text>   \r\n        <Link target=\"_blank\" fontWeight=\"bold\" bgColor=\"blue.400\" rounded=\"lg\" p=\"2\" mx=\"6\" href={projectLink} >\r\n            Click Here\r\n            <Icon as={FiArrowRight} />\r\n        </Link>  \r\n    </Box>\r\n}","import { \r\n    Box ,\r\n    Flex ,\r\n    Text ,\r\n    IconButton , \r\n    Icon ,\r\n    Tooltip\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport CardHeading from './CardHeading';\r\nimport {\r\n    RiArrowUpSLine ,\r\n    RiArrowDownSLine\r\n} from 'react-icons/ri';\r\nimport ReadMe from '../../ReadMe';\r\nimport { ProjectData } from '../../../Models';\r\nimport Donut from '../../Donut';\r\nimport { LiveProjectLink } from '../LiveProjectLink'; \r\n\r\nexport default function  ExpandableCard( props : ProjectData ) : React.ReactElement{\r\n    var [isOpen, setIsOpen] = useState<boolean>(false);\r\n    return <Box\r\n    overflowX=\"scroll\"\r\n    w={{ base:\"100%\" , lg:\"80%\"}}\r\n    h={{ base: 'fit-content' , lg: 'fit-content' }}\r\n    boxShadow=\"2xl\"\r\n    p=\"5\"\r\n    m=\"2\"\r\n    borderRadius=\"2xl\"\r\n    bgColor=\"whiteAlpha.300\"\r\n    >\r\n        <Flex\r\n        flexDir=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"start\"\r\n        >\r\n            <Box w=\"full\">\r\n                <Flex\r\n                flexDir={{ base:'column' , lg:'row' }}\r\n                justifyContent=\"space-between\"\r\n                alignItems={{ base:'center' , lg:'start' }}\r\n                >\r\n                    <Flex\r\n                    flexDir=\"column\"\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"start\"\r\n                    w=\"full\"\r\n                    >\r\n                        <CardHeading title={props.header} langs={props.langs} />\r\n                        <Text p=\"4\" fontSize=\"sm\" > {props.description} </Text>\r\n                        <Box\r\n                        display = { isOpen ? 'block' : 'none' }\r\n                        p=\"4\"\r\n                        >\r\n                            <ReadMe src={props.url} />\r\n                        </Box>\r\n                        <LiveProjectLink isLive={props.isLive} projectLink={props.projectLink} />\r\n                    </Flex>\r\n                    <Donut series={props.langs.map(({data})=>{return data;})} labels={props.langs.map(({name})=>{return name;})} />\r\n                </Flex>\r\n            </Box>\r\n            <Tooltip\r\n            hasArrow\r\n            label={ isOpen ? \"close\" : \"explore\" }\r\n            bgColor=\"blackAlpha.900\"\r\n            textColor=\"white\"\r\n            >\r\n                <IconButton\r\n                aria-label=\"explore-icon\"\r\n                colorScheme=\"blackAlpha\"\r\n                onClick= {(e)=>{\r\n                    setIsOpen( ! isOpen );\r\n                }}\r\n                >\r\n                    <Icon as={ isOpen ? RiArrowUpSLine : RiArrowDownSLine } />\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Flex>\r\n    </Box>\r\n}","import { \r\n    Box , \r\n    Flex , \r\n    Text ,\r\n    Icon ,\r\n    Menu,\r\n    MenuButton,\r\n    MenuList\r\n} from '@chakra-ui/react';\r\nimport { AiFillCloseCircle , AiOutlineInfoCircle } from 'react-icons/ai';\r\nimport { BsTerminal } from 'react-icons/bs';\r\n\r\nexport default function TerminalTitle( { onClose } : { onClose: Function} ) : React.ReactElement{\r\n    return <Box\r\n    bgColor=\"grey\"\r\n    borderTopRadius=\"3xl\"\r\n    >\r\n        <Flex\r\n        flexDir=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        w=\"full\"\r\n        >\r\n            <Flex\r\n            flexDir=\"row\"\r\n            alignItems=\"center\"\r\n            >\r\n                <Icon ml=\"5\" as={ BsTerminal } h=\"5\" w=\"5\" color=\"black\" />\r\n                <Text ml=\"1\" fontSize=\"sm\" fontWeight=\"bold\">S_Terminal</Text>\r\n            </Flex>\r\n            <Flex\r\n            flexDir=\"row\"\r\n            alignItems=\"center\"\r\n            mr=\"5\">\r\n                <Menu>\r\n                    <MenuButton>\r\n                    <Box\r\n                    >\r\n                        <Icon as={ AiOutlineInfoCircle } h=\"5\" w=\"5\" color=\"blue\" />\r\n                    </Box>\r\n                    </MenuButton>\r\n                    <MenuList>\r\n                        <Text fontWeight=\"bold\" textColor=\"blue\">Commands are:-</Text>\r\n                        <Text fontStyle=\"oblique\" pl=\"2\">sort -a | -d</Text>\r\n                        <Text fontStyle=\"oblique\" pl=\"2\">search keyword</Text>\r\n                        <Text fontStyle=\"oblique\" pl=\"2\">cd project_name</Text>\r\n                        <Text fontStyle=\"oblique\" pl=\"2\">filter language_name</Text>\r\n                        <Text fontStyle=\"oblique\" pl=\"2\">cls | clear</Text>\r\n                    </MenuList>\r\n                </Menu>\r\n                <Box\r\n                onClick = { (e)=>{\r\n                    onClose();\r\n                }}\r\n                >\r\n                    <Icon as={ AiFillCloseCircle } h=\"5\" w=\"5\" color=\"red\" />\r\n                </Box>\r\n            </Flex>\r\n        </Flex>\r\n    </Box>;\r\n}","import { \r\n    Box ,\r\n    IconButton,\r\n    Icon , \r\n    Tooltip,\r\n    Text ,\r\n    Flex ,\r\n    Input\r\n} from '@chakra-ui/react';\r\nimport TerminalTitle from './TerminalTitle';\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\nimport { BsTerminal } from 'react-icons/bs';\r\n\r\n\r\nexport default function TerminalUI( {getCommand} : {getCommand :Function}) : React.ReactElement{\r\n    const [ lastText , setLastText ] = useState<string>('');\r\n    const [ isTerminalOpen , setIsTerminalOpen ] =  useState<boolean>(false);\r\n    const execCommand = (command : string , input : HTMLInputElement)=>{\r\n        if(command.toLowerCase() === 'clear' ||  command.toLowerCase() === 'cls'){\r\n            getCommand( command );\r\n            setLastText('');\r\n        }else{\r\n            let output:string = getCommand( command ) ;\r\n            setLastText(  lastText + '\\n$ '+input.value+'\\n  '+ output);\r\n        }\r\n        input.value = '';\r\n    }\r\n    if( ! isTerminalOpen){\r\n        return <Tooltip\r\n        hasArrow\r\n        label=\"Open Terminal\"\r\n        bgColor=\"blackAlpha.900\"\r\n        textColor=\"white\"\r\n        >\r\n            <IconButton\r\n                _hover={{ bgColor:\"blue\" }}\r\n                position=\"fixed\"\r\n                bottom={{ base: \"8\", lg:\"20\"}}\r\n                right={{ base: \"8\", lg:\"20\"}}\r\n                h=\"20\"\r\n                w=\"20\"\r\n                borderRadius=\"50%\"\r\n                aria-label=\"floating-button\"\r\n                colorScheme=\"blackAlpha\"\r\n                onClick = { (e)=>{\r\n                    setIsTerminalOpen(true);\r\n                }}\r\n                >\r\n                    <Icon color=\"white\" as={ BsTerminal } h=\"10\" w=\"10\" />\r\n            </IconButton>\r\n        </Tooltip>\r\n    }\r\n    return <Box\r\n    w=\"full\"\r\n    position=\"fixed\"\r\n    bottom=\"10\"\r\n    h=\"40\"\r\n    >\r\n        <TerminalTitle onClose={()=>{\r\n            setIsTerminalOpen(false);\r\n        }} />\r\n\r\n        <Box\r\n        h=\"full\"\r\n        w=\"full\"\r\n        borderWidth=\"thick\"\r\n        borderColor=\"grey\"\r\n        bgColor=\"black\"\r\n        minH=\"20\"\r\n        overflowY=\"scroll\"\r\n        >\r\n            <Flex\r\n            flexDir=\"column\"\r\n            justifyContent=\"start\"\r\n            alignItems=\"start\"\r\n            >\r\n                { lastText.split('\\n').map( (v , i) => {\r\n                    return <Flex\r\n                    flexDir=\"row\"\r\n                    justifyContent=\"start\"\r\n                    alignItems=\"center\"\r\n                    key={i}\r\n                    >\r\n                        <Text px=\"1\" textColor = \"green.400\" >{v.substring(0,2)}</Text>\r\n                        <Text px=\"1\" textColor = \"white\">{v.substring(2,v.length) || ''}</Text>\r\n                    </Flex>\r\n                } )}\r\n            </Flex>\r\n            <Flex\r\n            flexDir=\"row\"\r\n            justifyContent=\"start\"\r\n            alignItems=\"center\"\r\n            >\r\n                <Text px=\"1\" textColor = \"green.400\">{'$ '}</Text>\r\n                <Input\r\n                border=\"none\"\r\n                px=\"1\"\r\n                w=\"full\"\r\n                textColor = \"white\"\r\n                onKeyDown={(e)=>{\r\n                    if(e.keyCode === 13 ){\r\n                        let value : string  = e.currentTarget.value.trim();\r\n                        execCommand( value , e.currentTarget );\r\n                        e.preventDefault();\r\n                        if(e.currentTarget.parentElement){\r\n                            if(e.currentTarget.parentElement.parentElement){\r\n                                e.currentTarget.parentElement.parentElement.scrollTop = e.currentTarget.parentElement.parentElement.scrollHeight;\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                _focus={{ outline:'none' }}\r\n                >\r\n                </Input>\r\n            </Flex>\r\n        </Box>\r\n    </Box>;\r\n}","import { \r\n    Box  ,\r\n    Flex,\r\n    Heading\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport ExpandableCard from './ExpandableCard';\r\nimport jsonData from '../../data/data.json';\r\nimport { ProjectData } from '../../Models';\r\nimport TerminalUI from '../TerminalUI';\r\nimport { useState } from 'react';\r\nimport { execCommand , sortData ,searchData , filterData , changeDirectory } from '../../helpers';\r\nimport { Command } from '../../Models';\r\n\r\nexport default function  Main() : React.ReactElement{\r\n    const [ cards , setCards ] =  useState<Array<ProjectData>>(jsonData);\r\n    const performOperation =  function( operation : Command ){\r\n        if( operation.func === 'sort' ){\r\n            if( operation.subFunc !== 'invalid'){\r\n                setCards([...sortData( operation.subFunc )]);\r\n                return;\r\n            }\r\n        }else if( operation.func === 'search' ){\r\n            if( operation.subFunc !== 'invalid'){\r\n                setCards([...searchData( operation.subFunc )]);\r\n                return;\r\n            }\r\n        }else if( operation.func === 'filter' ){\r\n            if( operation.subFunc !== 'invalid'){\r\n                setCards(filterData( operation.subFunc ));\r\n                return;\r\n            }\r\n        }else if( operation.func === 'cd' ){\r\n            if( operation.subFunc !== 'invalid'){\r\n                setCards(changeDirectory( operation.subFunc ));\r\n                return;\r\n            }\r\n        }else\r\n            setCards([...jsonData]);\r\n    }\r\n    return <Box\r\n    w=\"full\"\r\n    h=\"full\"\r\n    p=\"2\"\r\n    >\r\n        <Heading p=\"4\" color=\"twitter.500\" textAlign=\"center\">Projects</Heading>\r\n        <Flex\r\n        flexDir=\"column\"\r\n        alignItems=\"center\"\r\n        p={3}\r\n        >\r\n            {cards.map( (v : ProjectData , i) => {\r\n               return  <ExpandableCard\r\n               key={i}\r\n               projectLink={ v.projectLink }\r\n               isLive = { v.isLive }\r\n               header = { v.header }\r\n               url = {v.url}\r\n               description = {v.description}\r\n               langs={v.langs}\r\n               stack={v.stack}\r\n           />\r\n            } )}\r\n        </Flex>   \r\n\r\n        <TerminalUI getCommand={function(cmd : string) : string{\r\n            return execCommand( cmd , performOperation );\r\n        }}/>\r\n    </Box>\r\n}","import { Command , CommandJSON } from \"../Models\";\r\n\r\n\r\nexport const commandStringToJSON : Function = ( commandLine : string ) : CommandJSON => {\r\n    commandLine = commandLine.trim().toLowerCase();\r\n    const words = commandLine.split( /\\s+/ );\r\n    if( ! words.length )\r\n        return {\r\n            main : 'invalid' ,\r\n            args : []\r\n        }\r\n    return {\r\n        main : words[0] ,\r\n        args : words.slice( 1 , words.length )\r\n    }\r\n} \r\n\r\n\r\n/*\r\ncommands are:\r\nsort -a|-d\r\ncd ..|repoName\r\nfilter langName\r\nsearch word\r\n*/\r\n\r\nconst isValidCommand : Function = ( cmd : string ) : boolean => {\r\n    if( [ 'sort' , 'filter' , 'cd' , 'search' ].includes( cmd ) )\r\n        return true;\r\n    return false;\r\n}\r\n\r\nconst getSubFunc : Function = ( main : string , arg : Array<string> ) : string => {\r\n    if( main === 'cd' ){\r\n        return arg[0] === '..' ? 'back' : arg[0];\r\n    }else if ( main === 'filter' )\r\n        return [ 'python' , 'dart' , 'javascript' , 'typescript' , 'java' , 'html' , 'css' ].includes(arg[0]) \r\n            ? arg[0] : 'invalid';\r\n    else if( main === 'sort' )\r\n        return arg[0] === '-a' ? 'increasing' : ( arg[0] === '-d' ? 'decreasing' : 'invalid' ) ;\r\n    else if( main === 'search')\r\n        return arg.join( ' ' ) ; \r\n    return 'invalid';\r\n}\r\n\r\nexport const validateCommand : Function = ( cjson  : CommandJSON ) : Command => {\r\n    if( isValidCommand( cjson.main ) ){\r\n        if( ( cjson.main === 'search' && cjson.args.length > 0 ) || ( cjson.main !== 'search' && cjson.args.length === 1 ) ){\r\n            return {\r\n                func: cjson.main,\r\n                subFunc: getSubFunc( cjson.main ,cjson.args )\r\n            }\r\n        }else{\r\n            return {\r\n                func: cjson.main,\r\n                subFunc: 'invalid'\r\n            }\r\n        }\r\n    }else{\r\n        //invalid\r\n        return {\r\n            func: 'invalid',\r\n            subFunc: null\r\n        }\r\n    }\r\n}\r\n\r\nexport const execCommand : Function = ( command: string  , callback : Function ) : string=> {\r\n    const cjson : Command = validateCommand( commandStringToJSON( command ) );\r\n    command = cjson.func;\r\n    if ( cjson.func === 'sort' ){\r\n        if( cjson.subFunc === 'invalid' || cjson.subFunc === null ){\r\n            callback(cjson);\r\n            return `${command} command : arguments are invalid`;\r\n        }else{\r\n            callback(cjson);\r\n            return `${command} executed : list sorted in ${cjson.subFunc} order`;\r\n        }\r\n    }else if ( cjson.func === 'filter' ){\r\n        if( cjson.subFunc === 'invalid' || cjson.subFunc === null ){\r\n            callback(cjson);\r\n            return `${command} command : arguments are invalid`;\r\n        }else{\r\n            callback(cjson);\r\n            return `${command} executed : list filtered with ${cjson.subFunc} projects`;\r\n        }\r\n    }else if ( cjson.func === 'cd' ){\r\n        if( cjson.subFunc === 'invalid' || cjson.subFunc === null ){\r\n            callback(cjson);\r\n            return `${command} command : arguments are invalid`;\r\n        }else{\r\n            callback(cjson);\r\n            return `${command} executed : moved to ${cjson.subFunc} project`;\r\n        }\r\n    }else if ( cjson.func === 'search' ){\r\n        if( cjson.subFunc === 'invalid' || cjson.subFunc === null ){\r\n            callback(cjson);\r\n            return `${command} command : arguments are invalid`;\r\n        }else{\r\n            callback(cjson);\r\n            return `${command} executed : search results for ${cjson.subFunc}`;\r\n        }\r\n    }else{\r\n        callback(cjson);\r\n        return `Invalid Command`;\r\n    }\r\n}\r\n\r\n","import { \r\n  ChakraProvider ,\r\n  Box ,\r\n  } from '@chakra-ui/react';\r\nimport { Footer } from './Components/Footer';\r\nimport Header  from './Components/Header';\r\nimport Main from './Components/Main';\r\n\r\nexport default function App() {\r\n  return (\r\n    <ChakraProvider>\r\n      <Box\r\n      textAlign=\"center\"\r\n      alignItems=\"center\"\r\n      p=\"4\"\r\n      w=\"100px\"\r\n      >\r\n      </Box>\r\n      <Main/>\r\n      <Header/>\r\n      <Footer/>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}